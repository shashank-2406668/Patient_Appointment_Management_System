@model Patient_Appointment_Management_System.ViewModels.PatientProfileViewModel
@{
    Layout = null;
    ViewData["Title"] = "Patient Profile";
    // This logic remains the same. It's how we handle the second form.
    var changePasswordModel = new Patient_Appointment_Management_System.ViewModels.ChangePasswordViewModel();
}

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.min.css">
    <style>
        /* Your existing CSS styles are perfect and do not need to change. */
        body {
            background: linear-gradient(to bottom, #e3f2fd, #bbdefb);
            font-family: Arial, sans-serif;
        }

        .profile-container {
            background-color: #ffffff;
            padding: 30px;
            border-radius: 0.5rem;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-top: 20px;
            margin-bottom: 20px;
        }

            .profile-container h2 {
                margin-bottom: 20px;
                color: #007bff;
            }

        .form-label {
            font-weight: bold;
            color: #555;
        }

        .form-control:disabled, .form-control[readonly] {
            background-color: #e9ecef;
            cursor: not-allowed;
        }

        .button-group {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 20px;
        }

        .field-validation-error {
            color: #dc3545;
            font-size: 0.875em;
        }

        .input-validation-error {
            border-color: #dc3545;
        }
    </style>
</head>
<body>
    <div class="container mt-4 mb-4">
        <div class="row justify-content-center">
            <div class="col-md-8 col-lg-7">
                <!-- Patient Profile Details Section (This part is mostly unchanged) -->
                <div class="profile-container">
                    <h2><i class="bi bi-person-vcard me-2"></i>Patient Profile</h2>
                    <hr class="mb-4">

                    @if (TempData["ProfileUpdateMessage"] != null) { /* Alert logic remains */ }
                    @if (TempData["ProfileUpdateError"] != null) { /* Alert logic remains */ }
                    @if (TempData["PasswordChangeMessage"] != null) { /* Alert logic remains */ }
                    @if (TempData["PasswordChangeError"] != null) { /* Alert logic remains */ }

                    <form asp-controller="Patient" asp-action="PatientProfile" method="post" id="patientProfileForm">
                        <!-- The entire profile form remains exactly as you had it -->
                        @Html.AntiForgeryToken()
                        <input type="hidden" asp-for="Id" />
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
                        <div class="mb-3">
                            <label asp-for="Id" class="form-label">Patient ID</label>
                            <input asp-for="Id" class="form-control" readonly />
                        </div>
                        <div class="mb-3">
                            <label asp-for="Name" class="form-label"></label>
                            <input asp-for="Name" class="form-control" disabled />
                            <span asp-validation-for="Name" class="field-validation-error"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Email" class="form-label"></label>
                            <input asp-for="Email" type="email" class="form-control" readonly />
                            <span asp-validation-for="Email" class="field-validation-error"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Phone" class="form-label"></label>
                            <input asp-for="Phone" type="tel" class="form-control" disabled />
                            <span asp-validation-for="Phone" class="field-validation-error"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Dob" class="form-label"></label>
                            <input asp-for="Dob" type="date" class="form-control" asp-format="{0:yyyy-MM-dd}" readonly />
                            <span asp-validation-for="Dob" class="field-validation-error"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Address" class="form-label"></label>
                            <textarea asp-for="Address" class="form-control" rows="3" disabled></textarea>
                            <span asp-validation-for="Address" class="field-validation-error"></span>
                        </div>
                        <div class="button-group">
                            <button type="submit" class="btn btn-primary" id="saveProfileBtn" style="display: none;"><i class="bi bi-save me-1"></i>Save Profile</button>
                            <button type="button" class="btn btn-secondary" id="editProfileBtn"><i class="bi bi-pencil me-1"></i>Edit Profile</button>
                            <a asp-controller="Patient" asp-action="PatientDashboard" class="btn btn-outline-secondary"><i class="bi bi-arrow-left me-1"></i>Back</a>
                        </div>
                    </form>

                    <!-- START: NEW COLLAPSIBLE PASSWORD SECTION -->
                    <div class="mt-4">
                        <p>
                            <a class="btn btn-outline-primary w-100" data-bs-toggle="collapse" href="#changePasswordCollapse" role="button" aria-expanded="false" aria-controls="changePasswordCollapse">
                                <i class="bi bi-shield-lock me-2"></i>Change Password
                            </a>
                        </p>
                        <div class="collapse" id="changePasswordCollapse">
                            <div class="card card-body">
                                <h5>Update Your Password</h5>
                                <hr />
                                <!-- The password form is now inside the collapsible div -->
                                <form asp-controller="Patient" asp-action="ChangePassword" method="post" id="changePasswordForm">
                                    @Html.AntiForgeryToken()
                                    @{
                                        var changePasswordValidationModel = ViewData["ChangePasswordViewModel"] as Patient_Appointment_Management_System.ViewModels.ChangePasswordViewModel ?? changePasswordModel;
                                    }
                                    <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                                    <div class="mb-3">
                                        <label asp-for="@changePasswordValidationModel.CurrentPassword" class="form-label"></label>
                                        <input asp-for="@changePasswordValidationModel.CurrentPassword" type="password" class="form-control" />
                                        <span asp-validation-for="@changePasswordValidationModel.CurrentPassword" class="field-validation-error"></span>
                                    </div>
                                    <div class="mb-3">
                                        <label asp-for="@changePasswordValidationModel.NewPassword" class="form-label"></label>
                                        <input asp-for="@changePasswordValidationModel.NewPassword" type="password" class="form-control" />
                                        <span asp-validation-for="@changePasswordValidationModel.NewPassword" class="field-validation-error"></span>
                                    </div>
                                    <!-- === THIS IS THE CORRECTED BLOCK === -->
                                    <div class="mb-3">
                                        <label asp-for="@changePasswordValidationModel.ConfirmPassword" class="form-label"></label>
                                        <input asp-for="@changePasswordValidationModel.ConfirmPassword" type="password" class="form-control" />
                                        <span asp-validation-for="@changePasswordValidationModel.ConfirmPassword" class="field-validation-error"></span>
                                    </div>
                                    <!-- === END OF CORRECTION === -->
                                    <div class="mt-3">
                                        <button type="submit" class="btn btn-primary w-100"><i class="bi bi-key me-1"></i>Update Password</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                    <!-- END: NEW COLLAPSIBLE PASSWORD SECTION -->
                </div>
            </div>
        </div>
    </div>

   

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>

    <script>
        $(document).ready(function () {
            // This logic to enable the profile form for editing is correct and remains.
            $("#editProfileBtn").click(function () {
                $("#patientProfileForm .form-control")
                    .not("#Id, #Dob, #Email") // Keep identifiers/readonly fields locked
                    .prop("disabled", false);
                $("#editProfileBtn").hide();
                $("#saveProfileBtn").show();
                $("#Name").focus();
            });

            // This logic to expand the password accordion on error is also correct.
            if ($('#changePasswordForm .field-validation-error').length > 0) {
                var collapseElement = new bootstrap.Collapse($('#changePasswordCollapse'), {
                    toggle: true
                });
            }

            // ======================================================================
            // THE NEW, MORE ROBUST SOLUTION TO THE SCROLLING PROBLEM
            // ======================================================================
            // This flag ensures our scroll-to-top logic only runs ONCE on page load.
            let hasScrolledToTop = false;

            // We listen for the 'focusin' event on the entire document. 'focusin' bubbles up,
            // which is more reliable for catching the event from any input.
            $(document).on('focusin', function() {
                // If we haven't already forced the scroll, and there are password errors...
                if (!hasScrolledToTop && $('#changePasswordForm .field-validation-error').length > 0) {

                    // Set the flag to true so this code never runs again.
                    hasScrolledToTop = true;

                    // Force the window to scroll to the very top.
                    window.scrollTo(0, 0);
                }
            });
            // ======================================================================

        });
    </script>
</body>
</html>