@{
    // All views are in Views/Home/, so Layout = null is appropriate
    // if this page is completely self-contained with its own <head> and <body>.
    // If you had a shared layout in Views/Home/ (e.g., _LayoutHome.cshtml), you'd use that.
    Layout = null;
    ViewData["Title"] = "Patient Dashboard";
}

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(to bottom, #e3f2fd, #bbdefb);
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .navbar {
            background-color: #007bff;
        }

            .navbar a.navbar-brand, .navbar a.nav-link {
                color: white !important;
            }
                /* Ensure high specificity */
                .navbar a.nav-link:hover {
                    color: #d1ecf1 !important;
                }

        .btn-primary {
            background-color: #007bff;
            border: none;
        }

            .btn-primary:hover {
                background-color: #0056b3;
            }

        table {
            background-color: white;
        }

        th {
            background-color: #007bff;
            color: white;
        }

        footer {
            background-color: #007bff;
            color: white;
            text-align: center;
            padding: 10px 0;
            /* Removed position: fixed; to allow normal page flow with flexbox */
            /* If you want a sticky footer with flex, the body structure needs specific setup */
            width: 100%;
            margin-top: auto; /* Pushes footer to bottom if content is short */
        }

        .content {
            flex: 1 0 auto; /* Allows content to grow and shrink, but not shrink below its content size */
            padding-bottom: 60px; /* Add padding to prevent content from being hidden by a fixed footer if you re-add it */
        }
    </style>
</head>
<body>
    <!-- Navigation Bar -->
    <nav class="navbar navbar-expand-lg p-3">
        <div class="container-fluid">
            @* Link to Patient Dashboard (this page) *@
            <a class="navbar-brand" asp-controller="Patient" asp-action="PatientDashboard">Patient Portal</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavPatient">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNavPatient">
                <ul class="navbar-nav me-auto">
                    @* Add other patient navigation links here if needed later *@
                </ul>
                <ul class="navbar-nav">
                    <li class="nav-item">
                        @* Link to a future PatientProfile action in PatientController *@
                        <a class="nav-link" asp-controller="Patient" asp-action="PatientProfile">My Profile</a>
                    </li>
                    <li class="nav-item">
                        @* Logout form submitting to PatientController's PatientLogout action *@
                        <form asp-controller="Patient" asp-action="PatientLogout" method="post" class="d-inline">
                            @Html.AntiForgeryToken() @* Good for security *@
                            <button type="submit" class="nav-link btn btn-link" style="color: white; text-decoration: none; padding: 0.5rem 1rem;">Logout</button>
                        </form>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="container mt-4 content">
        <h1 class="text-center mb-4">Welcome, Patient!</h1>

        @if (ViewBag.SuccessMessage != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @ViewBag.SuccessMessage
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }


        <!-- Book Appointment Button -->
        <div class="text-center mb-4">
            @* Link to a future BookAppointment action in PatientController (or a dedicated AppointmentController) *@
            <a asp-controller="Patient" asp-action="BookAppointment" class="btn btn-primary btn-lg">Book Appointment</a>
        </div>

        <!-- Tables Section -->
        <div class="row">
            <!-- Upcoming Appointments Table -->
            <div class="col-md-6">
                <h3>Upcoming Appointments</h3>
                @* Data here is currently static. Later, this will be populated from your model passed by the controller *@
                <table class="table table-bordered table-striped mt-3">
                    @* Added table-striped for better readability *@
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Time</th>
                            <th>Doctor</th>
                        </tr>
                    </thead>
                    <tbody>
                        @* Example Static Data - Replace with dynamic data from model later *@
                        <tr>
                            <td>2025-05-10</td>
                            <td>10:00 AM - 11:00 AM</td>
                            <td>Dr. Vishnu</td>
                        </tr>
                        <tr>
                            <td>2025-05-12</td>
                            <td>2:00 PM - 3:00 PM</td>
                            <td>Dr. Adhitya</td>
                        </tr>
                        @*
                        @if (Model != null && Model.UpcomingAppointments.Any())
                        {
                            foreach (var appt in Model.UpcomingAppointments)
                            {
                                <tr>
                                    <td>@appt.Date.ToString("yyyy-MM-dd")</td>
                                    <td>@appt.TimeSlot.ToString(@"hh\:mm tt")</td>
                                    <td>@appt.DoctorName</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr><td colspan="3" class="text-center">No upcoming appointments.</td></tr>
                        }
                        *@
                    </tbody>
                </table>
            </div>

            <!-- Appointment History Table -->
            <div class="col-md-6">
                <h3>Appointment History</h3>
                <table class="table table-bordered table-striped mt-3">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Time</th>
                            <th>Doctor</th>
                        </tr>
                    </thead>
                    <tbody>
                        @* Example Static Data - Replace with dynamic data from model later *@
                        <tr>
                            <td>2025-04-20</td>
                            <td>11:00 AM - 12:00 PM</td>
                            <td>Dr. Sheshank</td>
                        </tr>
                        <tr>
                            <td>2025-04-15</td>
                            <td>3:00 PM - 4:00 PM</td>
                            <td>Dr. Vishnu</td>
                        </tr>
                        @*
                        @if (Model != null && Model.AppointmentHistory.Any())
                        {
                            foreach (var appt in Model.AppointmentHistory)
                            {
                                <tr>
                                    <td>@appt.Date.ToString("yyyy-MM-dd")</td>
                                    <td>@appt.TimeSlot.ToString(@"hh\:mm tt")</td>
                                    <td>@appt.DoctorName</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr><td colspan="3" class="text-center">No appointment history.</td></tr>
                        }
                        *@
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Footer -->
    <footer>
        <p>&copy; @DateTime.Now.Year HS Hospital. All rights reserved.</p>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>