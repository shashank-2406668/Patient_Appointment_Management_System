@model Patient_Appointment_Management_System.ViewModels.PatientProfileViewModel
@{
    Layout = null;
    ViewData["Title"] = "Patient Profile";
    // Prepare an empty ChangePasswordViewModel for the second form
    var changePasswordModel = new Patient_Appointment_Management_System.ViewModels.ChangePasswordViewModel();
}

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.min.css">
    <style>
        body {
            background: linear-gradient(to bottom, #e3f2fd, #bbdefb);
            font-family: Arial, sans-serif;
        }

        .profile-container, .password-container {
            background-color: #ffffff;
            padding: 30px;
            border-radius: 0.5rem;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-top: 20px;
            margin-bottom: 20px;
        }

            .profile-container h2, .password-container h3 {
                margin-bottom: 20px;
                color: #007bff;
            }

        .form-label {
            font-weight: bold;
            color: #555;
        }

        .form-control:disabled, .form-control[readonly] {
            background-color: #e9ecef;
            cursor: not-allowed;
        }

        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
        }

            .btn-primary:hover {
                background-color: #0056b3;
                border-color: #0056b3;
            }

        .btn-secondary {
            background-color: #6c757d;
            border-color: #6c757d;
        }

            .btn-secondary:hover {
                background-color: #545b62;
                border-color: #4e555b;
            }

        .button-group {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 20px;
        }

        .field-validation-error {
            color: #dc3545;
            font-size: 0.875em;
        }

        .input-validation-error {
            border-color: #dc3545;
        }

        hr.dashed {
            border-top: 1px dashed #ccc;
            margin-top: 30px;
            margin-bottom: 30px;
        }
    </style>
</head>
<body>
    <div class="container mt-4 mb-4">
        <div class="row justify-content-center">
            <div class="col-md-8 col-lg-7">
                <!-- Patient Profile Details Section -->
                <div class="profile-container">
                    <h2><i class="bi bi-person-vcard me-2"></i>Patient Profile</h2>
                    <hr class="mb-4">

                    @if (TempData["ProfileUpdateMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            @TempData["ProfileUpdateMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    @if (TempData["ProfileUpdateError"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            @TempData["ProfileUpdateError"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    <form asp-controller="Patient" asp-action="PatientProfile" method="post" id="patientProfileForm">
                        @Html.AntiForgeryToken()
                        <input type="hidden" asp-for="Id" />

                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" data-formtarget="profile"></div>

                        <div class="mb-3">
                            <label asp-for="Id" class="form-label">Patient ID</label>
                            <input asp-for="Id" class="form-control" readonly /> @* Display Patient ID as readonly *@
                        </div>
                        <div class="mb-3">
                            <label asp-for="Name" class="form-label"></label>
                            <input asp-for="Name" class="form-control" disabled />
                            <span asp-validation-for="Name" class="field-validation-error"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Email" class="form-label"></label>
                            <input asp-for="Email" type="email" class="form-control" disabled />
                            <span asp-validation-for="Email" class="field-validation-error"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Phone" class="form-label"></label>
                            <input asp-for="Phone" type="tel" class="form-control" disabled />
                            <span asp-validation-for="Phone" class="field-validation-error"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Dob" class="form-label"></label>
                            <input asp-for="Dob" type="date" class="form-control" asp-format="{0:yyyy-MM-dd}" disabled />
                            <span asp-validation-for="Dob" class="field-validation-error"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Address" class="form-label"></label>
                            <textarea asp-for="Address" class="form-control" rows="3" disabled></textarea>
                            <span asp-validation-for="Address" class="field-validation-error"></span>
                        </div>

                        <div class="button-group">
                            <button type="submit" class="btn btn-primary" id="saveProfileBtn" style="display: none;"><i class="bi bi-save me-1"></i>Save Profile</button>
                            <button type="button" class="btn btn-secondary" id="editProfileBtn"><i class="bi bi-pencil me-1"></i>Edit Profile</button>
                            <a asp-controller="Patient" asp-action="PatientDashboard" class="btn btn-outline-secondary"><i class="bi bi-arrow-left me-1"></i>Back</a>
                        </div>
                    </form>
                </div>

                <hr class="dashed"> @* Visual separator *@

                <!-- Change Password Section -->
                <div class="password-container">
                    <h3><i class="bi bi-shield-lock me-2"></i>Change Password</h3>
                    <hr class="mb-4">

                    @if (TempData["PasswordChangeMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            @TempData["PasswordChangeMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    @if (TempData["PasswordChangeError"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            @TempData["PasswordChangeError"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    @*
                        This section uses the @{ changePasswordModel = ... } defined at the top.
                        If validation fails in the ChangePassword POST action, the controller
                        should repopulate this view with the model containing errors.
                        For simplicity in GET, we initialize an empty one. If returning from POST error,
                        ViewBag or a more complex main ViewModel could carry the errored ChangePasswordViewModel.
                        Let's assume the controller passes back 'changePasswordModel' if there's an error.
                    *@
                    <form asp-controller="Patient" asp-action="ChangePassword" method="post" id="changePasswordForm">
                        @Html.AntiForgeryToken()
                        @{
                            // This 'changePasswordValidationModel' is the key
                            var changePasswordValidationModel = ViewData["ChangePasswordViewModel"] as Patient_Appointment_Management_System.ViewModels.ChangePasswordViewModel ?? changePasswordModel;
                        }
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" data-formtarget="password"></div>

                        <div class="mb-3">
                            <label asp-for="@changePasswordValidationModel.CurrentPassword" class="form-label"></label>
                            <input asp-for="@changePasswordValidationModel.CurrentPassword" type="password" class="form-control" />
                            <span asp-validation-for="@changePasswordValidationModel.CurrentPassword" class="field-validation-error"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="@changePasswordValidationModel.NewPassword" class="form-label"></label>
                            <input asp-for="@changePasswordValidationModel.NewPassword" type="password" class="form-control" />
                            <span asp-validation-for="@changePasswordValidationModel.NewPassword" class="field-validation-error"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="@changePasswordValidationModel.ConfirmNewPassword" class="form-label"></label>
                            <input asp-for="@changePasswordValidationModel.ConfirmNewPassword" type="password" class="form-control" />
                            <span asp-validation-for="@changePasswordValidationModel.ConfirmNewPassword" class="field-validation-error"></span>
                        </div>
                        <div class="mt-3">
                            <button type="submit" class="btn btn-primary w-100"><i class="bi bi-key me-1"></i>Update Password</button>
                        </div>
                    </form>
                  
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>

    <script>
        $(document).ready(function () {
            $("#editProfileBtn").click(function () {
                $("#patientProfileForm .form-control")
                    .not("#Id") // Patient ID should remain readonly
                    .not("#Dob") // DOB should remain disabled
                    .prop("disabled", false);
                $("#editProfileBtn").hide();
                $("#saveProfileBtn").show();
                $("#Name").focus();
            });

            // Check if there are validation errors for the password form and scroll to it
            if ($('#changePasswordForm .field-validation-error').length > 0 || $('#changePasswordForm div[asp-validation-summary="ModelOnly"]:not(:empty)').length > 0) {
                var passwordForm = document.getElementById('changePasswordForm');
                if (passwordForm) {
                    passwordForm.scrollIntoView({ behavior: 'smooth', block: 'start' });
                }
            }
             // Check if there are validation errors for the profile form and scroll to it
            if ($('#patientProfileForm .field-validation-error').length > 0 || $('#patientProfileForm div[asp-validation-summary="ModelOnly"]:not(:empty)').length > 0) {
                var profileForm = document.getElementById('patientProfileForm');
                if (profileForm) {
                    // Only scroll if password form didn't have errors, to avoid conflicting scrolls
                    if (!($('#changePasswordForm .field-validation-error').length > 0 || $('#changePasswordForm div[asp-validation-summary="ModelOnly"]:not(:empty)').length > 0)) {
                         profileForm.scrollIntoView({ behavior: 'smooth', block: 'start' });
                    }
                }
            }
        });
    </script>
</body>
</html>